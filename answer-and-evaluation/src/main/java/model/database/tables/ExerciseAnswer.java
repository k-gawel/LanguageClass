/*
 * This file is generated by jOOQ.
 */
package model.database.tables;


import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import model.database.Keys;
import model.database.Public;
import model.database.tables.records.ExerciseAnswerRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExerciseAnswer extends TableImpl<ExerciseAnswerRecord> {

    private static final long serialVersionUID = 789584606;

    /**
     * The reference instance of <code>public.exercise_answer</code>
     */
    public static final ExerciseAnswer EXERCISE_ANSWER = new ExerciseAnswer();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ExerciseAnswerRecord> getRecordType() {
        return ExerciseAnswerRecord.class;
    }

    /**
     * The column <code>public.exercise_answer.key</code>.
     */
    public final TableField<ExerciseAnswerRecord, Long> KEY = createField(DSL.name("key"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.exercise_answer.id</code>.
     */
    public final TableField<ExerciseAnswerRecord, String> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.exercise_answer.created_at</code>.
     */
    public final TableField<ExerciseAnswerRecord, LocalDate> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>public.exercise_answer.content</code>.
     */
    public final TableField<ExerciseAnswerRecord, Long> CONTENT = createField(DSL.name("content"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.exercise_answer.student</code>.
     */
    public final TableField<ExerciseAnswerRecord, Long> STUDENT = createField(DSL.name("student"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.exercise_answer</code> table reference
     */
    public ExerciseAnswer() {
        this(DSL.name("exercise_answer"), null);
    }

    /**
     * Create an aliased <code>public.exercise_answer</code> table reference
     */
    public ExerciseAnswer(String alias) {
        this(DSL.name(alias), EXERCISE_ANSWER);
    }

    /**
     * Create an aliased <code>public.exercise_answer</code> table reference
     */
    public ExerciseAnswer(Name alias) {
        this(alias, EXERCISE_ANSWER);
    }

    private ExerciseAnswer(Name alias, Table<ExerciseAnswerRecord> aliased) {
        this(alias, aliased, null);
    }

    private ExerciseAnswer(Name alias, Table<ExerciseAnswerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ExerciseAnswer(Table<O> child, ForeignKey<O, ExerciseAnswerRecord> key) {
        super(child, key, EXERCISE_ANSWER);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<ExerciseAnswerRecord> getPrimaryKey() {
        return Keys.EXERCISE_ANSWER_PKEY;
    }

    @Override
    public List<UniqueKey<ExerciseAnswerRecord>> getKeys() {
        return Arrays.<UniqueKey<ExerciseAnswerRecord>>asList(Keys.EXERCISE_ANSWER_PKEY, Keys.UK_A9DOPRN2I1NTVYOOJ1PWMB9QS);
    }

    @Override
    public List<ForeignKey<ExerciseAnswerRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ExerciseAnswerRecord, ?>>asList(Keys.EXERCISE_ANSWER__FKFDEC6PLWHTI2FXMWC1HJA2TI5, Keys.EXERCISE_ANSWER__FKRJB1G5INCV2DCEKR0JN3RB9KB);
    }

    public ExerciseContent exerciseContent() {
        return new ExerciseContent(this, Keys.EXERCISE_ANSWER__FKFDEC6PLWHTI2FXMWC1HJA2TI5);
    }

    public AppUser appUser() {
        return new AppUser(this, Keys.EXERCISE_ANSWER__FKRJB1G5INCV2DCEKR0JN3RB9KB);
    }

    @Override
    public ExerciseAnswer as(String alias) {
        return new ExerciseAnswer(DSL.name(alias), this);
    }

    @Override
    public ExerciseAnswer as(Name alias) {
        return new ExerciseAnswer(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ExerciseAnswer rename(String name) {
        return new ExerciseAnswer(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ExerciseAnswer rename(Name name) {
        return new ExerciseAnswer(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, LocalDate, Long, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
