/*
 * This file is generated by jOOQ.
 */
package model.database.tables;


import java.util.Arrays;
import java.util.List;

import model.database.Keys;
import model.database.Public;
import model.database.tables.records.ExerciseEvaluationQuestionEvaluationRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExerciseEvaluationQuestionEvaluation extends TableImpl<ExerciseEvaluationQuestionEvaluationRecord> {

    private static final long serialVersionUID = -1413927036;

    /**
     * The reference instance of <code>public.exercise_evaluation_question_evaluation</code>
     */
    public static final ExerciseEvaluationQuestionEvaluation EXERCISE_EVALUATION_QUESTION_EVALUATION = new ExerciseEvaluationQuestionEvaluation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ExerciseEvaluationQuestionEvaluationRecord> getRecordType() {
        return ExerciseEvaluationQuestionEvaluationRecord.class;
    }

    /**
     * The column <code>public.exercise_evaluation_question_evaluation.exercise_evaluation</code>.
     */
    public final TableField<ExerciseEvaluationQuestionEvaluationRecord, Long> EXERCISE_EVALUATION = createField(DSL.name("exercise_evaluation"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.exercise_evaluation_question_evaluation.question_evaluation</code>.
     */
    public final TableField<ExerciseEvaluationQuestionEvaluationRecord, Long> QUESTION_EVALUATION = createField(DSL.name("question_evaluation"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.exercise_evaluation_question_evaluation</code> table reference
     */
    public ExerciseEvaluationQuestionEvaluation() {
        this(DSL.name("exercise_evaluation_question_evaluation"), null);
    }

    /**
     * Create an aliased <code>public.exercise_evaluation_question_evaluation</code> table reference
     */
    public ExerciseEvaluationQuestionEvaluation(String alias) {
        this(DSL.name(alias), EXERCISE_EVALUATION_QUESTION_EVALUATION);
    }

    /**
     * Create an aliased <code>public.exercise_evaluation_question_evaluation</code> table reference
     */
    public ExerciseEvaluationQuestionEvaluation(Name alias) {
        this(alias, EXERCISE_EVALUATION_QUESTION_EVALUATION);
    }

    private ExerciseEvaluationQuestionEvaluation(Name alias, Table<ExerciseEvaluationQuestionEvaluationRecord> aliased) {
        this(alias, aliased, null);
    }

    private ExerciseEvaluationQuestionEvaluation(Name alias, Table<ExerciseEvaluationQuestionEvaluationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ExerciseEvaluationQuestionEvaluation(Table<O> child, ForeignKey<O, ExerciseEvaluationQuestionEvaluationRecord> key) {
        super(child, key, EXERCISE_EVALUATION_QUESTION_EVALUATION);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<ForeignKey<ExerciseEvaluationQuestionEvaluationRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ExerciseEvaluationQuestionEvaluationRecord, ?>>asList(Keys.EXERCISE_EVALUATION_QUESTION_EVALUATION__FK2WO10HNSQEI0NDN4L41CEVCX1, Keys.EXERCISE_EVALUATION_QUESTION_EVALUATION__FK29JFRASFHPQCWY68K1B8GD0H9);
    }

    public ExerciseEvaluation exerciseEvaluation() {
        return new ExerciseEvaluation(this, Keys.EXERCISE_EVALUATION_QUESTION_EVALUATION__FK2WO10HNSQEI0NDN4L41CEVCX1);
    }

    public QuestionEvaluationEntity questionEvaluationEntity() {
        return new QuestionEvaluationEntity(this, Keys.EXERCISE_EVALUATION_QUESTION_EVALUATION__FK29JFRASFHPQCWY68K1B8GD0H9);
    }

    @Override
    public ExerciseEvaluationQuestionEvaluation as(String alias) {
        return new ExerciseEvaluationQuestionEvaluation(DSL.name(alias), this);
    }

    @Override
    public ExerciseEvaluationQuestionEvaluation as(Name alias) {
        return new ExerciseEvaluationQuestionEvaluation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ExerciseEvaluationQuestionEvaluation rename(String name) {
        return new ExerciseEvaluationQuestionEvaluation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ExerciseEvaluationQuestionEvaluation rename(Name name) {
        return new ExerciseEvaluationQuestionEvaluation(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
