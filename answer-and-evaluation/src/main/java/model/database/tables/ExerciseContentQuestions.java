/*
 * This file is generated by jOOQ.
 */
package model.database.tables;


import java.util.Arrays;
import java.util.List;

import model.database.Keys;
import model.database.Public;
import model.database.tables.records.ExerciseContentQuestionsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExerciseContentQuestions extends TableImpl<ExerciseContentQuestionsRecord> {

    private static final long serialVersionUID = 642746709;

    /**
     * The reference instance of <code>public.exercise_content_questions</code>
     */
    public static final ExerciseContentQuestions EXERCISE_CONTENT_QUESTIONS = new ExerciseContentQuestions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ExerciseContentQuestionsRecord> getRecordType() {
        return ExerciseContentQuestionsRecord.class;
    }

    /**
     * The column <code>public.exercise_content_questions.exercise</code>.
     */
    public final TableField<ExerciseContentQuestionsRecord, Long> EXERCISE = createField(DSL.name("exercise"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.exercise_content_questions.question</code>.
     */
    public final TableField<ExerciseContentQuestionsRecord, Long> QUESTION = createField(DSL.name("question"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.exercise_content_questions</code> table reference
     */
    public ExerciseContentQuestions() {
        this(DSL.name("exercise_content_questions"), null);
    }

    /**
     * Create an aliased <code>public.exercise_content_questions</code> table reference
     */
    public ExerciseContentQuestions(String alias) {
        this(DSL.name(alias), EXERCISE_CONTENT_QUESTIONS);
    }

    /**
     * Create an aliased <code>public.exercise_content_questions</code> table reference
     */
    public ExerciseContentQuestions(Name alias) {
        this(alias, EXERCISE_CONTENT_QUESTIONS);
    }

    private ExerciseContentQuestions(Name alias, Table<ExerciseContentQuestionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ExerciseContentQuestions(Name alias, Table<ExerciseContentQuestionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ExerciseContentQuestions(Table<O> child, ForeignKey<O, ExerciseContentQuestionsRecord> key) {
        super(child, key, EXERCISE_CONTENT_QUESTIONS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<UniqueKey<ExerciseContentQuestionsRecord>> getKeys() {
        return Arrays.<UniqueKey<ExerciseContentQuestionsRecord>>asList(Keys.UK_JFDG1AJPCD292FAN5S4BEINLT);
    }

    @Override
    public List<ForeignKey<ExerciseContentQuestionsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ExerciseContentQuestionsRecord, ?>>asList(Keys.EXERCISE_CONTENT_QUESTIONS__FKJK6N4XAJXYYAKFI9JXX9GHQQW);
    }

    public ExerciseContent exerciseContent() {
        return new ExerciseContent(this, Keys.EXERCISE_CONTENT_QUESTIONS__FKJK6N4XAJXYYAKFI9JXX9GHQQW);
    }

    @Override
    public ExerciseContentQuestions as(String alias) {
        return new ExerciseContentQuestions(DSL.name(alias), this);
    }

    @Override
    public ExerciseContentQuestions as(Name alias) {
        return new ExerciseContentQuestions(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ExerciseContentQuestions rename(String name) {
        return new ExerciseContentQuestions(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ExerciseContentQuestions rename(Name name) {
        return new ExerciseContentQuestions(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
