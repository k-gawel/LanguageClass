/*
 * This file is generated by jOOQ.
 */
package model.database.tables.records;


import model.database.tables.ChapterContent;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChapterContentRecord extends TableRecordImpl<ChapterContentRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = -184989510;

    /**
     * Setter for <code>public.chapter_content.chapter</code>.
     */
    public void setChapter(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.chapter_content.chapter</code>.
     */
    public Long getChapter() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.chapter_content.content</code>.
     */
    public void setContent(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.chapter_content.content</code>.
     */
    public Long getContent() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ChapterContent.CHAPTER_CONTENT.CHAPTER;
    }

    @Override
    public Field<Long> field2() {
        return ChapterContent.CHAPTER_CONTENT.CONTENT;
    }

    @Override
    public Long component1() {
        return getChapter();
    }

    @Override
    public Long component2() {
        return getContent();
    }

    @Override
    public Long value1() {
        return getChapter();
    }

    @Override
    public Long value2() {
        return getContent();
    }

    @Override
    public ChapterContentRecord value1(Long value) {
        setChapter(value);
        return this;
    }

    @Override
    public ChapterContentRecord value2(Long value) {
        setContent(value);
        return this;
    }

    @Override
    public ChapterContentRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChapterContentRecord
     */
    public ChapterContentRecord() {
        super(ChapterContent.CHAPTER_CONTENT);
    }

    /**
     * Create a detached, initialised ChapterContentRecord
     */
    public ChapterContentRecord(Long chapter, Long content) {
        super(ChapterContent.CHAPTER_CONTENT);

        set(0, chapter);
        set(1, content);
    }
}
