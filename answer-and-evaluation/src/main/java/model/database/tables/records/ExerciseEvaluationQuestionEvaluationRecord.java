/*
 * This file is generated by jOOQ.
 */
package model.database.tables.records;


import model.database.tables.ExerciseEvaluationQuestionEvaluation;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExerciseEvaluationQuestionEvaluationRecord extends TableRecordImpl<ExerciseEvaluationQuestionEvaluationRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = -1075931988;

    /**
     * Setter for <code>public.exercise_evaluation_question_evaluation.exercise_evaluation</code>.
     */
    public void setExerciseEvaluation(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.exercise_evaluation_question_evaluation.exercise_evaluation</code>.
     */
    public Long getExerciseEvaluation() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.exercise_evaluation_question_evaluation.question_evaluation</code>.
     */
    public void setQuestionEvaluation(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.exercise_evaluation_question_evaluation.question_evaluation</code>.
     */
    public Long getQuestionEvaluation() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ExerciseEvaluationQuestionEvaluation.EXERCISE_EVALUATION_QUESTION_EVALUATION.EXERCISE_EVALUATION;
    }

    @Override
    public Field<Long> field2() {
        return ExerciseEvaluationQuestionEvaluation.EXERCISE_EVALUATION_QUESTION_EVALUATION.QUESTION_EVALUATION;
    }

    @Override
    public Long component1() {
        return getExerciseEvaluation();
    }

    @Override
    public Long component2() {
        return getQuestionEvaluation();
    }

    @Override
    public Long value1() {
        return getExerciseEvaluation();
    }

    @Override
    public Long value2() {
        return getQuestionEvaluation();
    }

    @Override
    public ExerciseEvaluationQuestionEvaluationRecord value1(Long value) {
        setExerciseEvaluation(value);
        return this;
    }

    @Override
    public ExerciseEvaluationQuestionEvaluationRecord value2(Long value) {
        setQuestionEvaluation(value);
        return this;
    }

    @Override
    public ExerciseEvaluationQuestionEvaluationRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExerciseEvaluationQuestionEvaluationRecord
     */
    public ExerciseEvaluationQuestionEvaluationRecord() {
        super(ExerciseEvaluationQuestionEvaluation.EXERCISE_EVALUATION_QUESTION_EVALUATION);
    }

    /**
     * Create a detached, initialised ExerciseEvaluationQuestionEvaluationRecord
     */
    public ExerciseEvaluationQuestionEvaluationRecord(Long exerciseEvaluation, Long questionEvaluation) {
        super(ExerciseEvaluationQuestionEvaluation.EXERCISE_EVALUATION_QUESTION_EVALUATION);

        set(0, exerciseEvaluation);
        set(1, questionEvaluation);
    }
}
