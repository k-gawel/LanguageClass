/*
 * This file is generated by jOOQ.
 */
package model.database.tables.records;


import model.database.tables.ExerciseAnswerAnswers;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExerciseAnswerAnswersRecord extends TableRecordImpl<ExerciseAnswerAnswersRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = -140185956;

    /**
     * Setter for <code>public.exercise_answer_answers.exercise_answer</code>.
     */
    public void setExerciseAnswer(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.exercise_answer_answers.exercise_answer</code>.
     */
    public Long getExerciseAnswer() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.exercise_answer_answers.question_answer</code>.
     */
    public void setQuestionAnswer(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.exercise_answer_answers.question_answer</code>.
     */
    public Long getQuestionAnswer() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ExerciseAnswerAnswers.EXERCISE_ANSWER_ANSWERS.EXERCISE_ANSWER;
    }

    @Override
    public Field<Long> field2() {
        return ExerciseAnswerAnswers.EXERCISE_ANSWER_ANSWERS.QUESTION_ANSWER;
    }

    @Override
    public Long component1() {
        return getExerciseAnswer();
    }

    @Override
    public Long component2() {
        return getQuestionAnswer();
    }

    @Override
    public Long value1() {
        return getExerciseAnswer();
    }

    @Override
    public Long value2() {
        return getQuestionAnswer();
    }

    @Override
    public ExerciseAnswerAnswersRecord value1(Long value) {
        setExerciseAnswer(value);
        return this;
    }

    @Override
    public ExerciseAnswerAnswersRecord value2(Long value) {
        setQuestionAnswer(value);
        return this;
    }

    @Override
    public ExerciseAnswerAnswersRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExerciseAnswerAnswersRecord
     */
    public ExerciseAnswerAnswersRecord() {
        super(ExerciseAnswerAnswers.EXERCISE_ANSWER_ANSWERS);
    }

    /**
     * Create a detached, initialised ExerciseAnswerAnswersRecord
     */
    public ExerciseAnswerAnswersRecord(Long exerciseAnswer, Long questionAnswer) {
        super(ExerciseAnswerAnswers.EXERCISE_ANSWER_ANSWERS);

        set(0, exerciseAnswer);
        set(1, questionAnswer);
    }
}
