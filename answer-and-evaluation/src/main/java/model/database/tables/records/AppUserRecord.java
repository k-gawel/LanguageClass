/*
 * This file is generated by jOOQ.
 */
package model.database.tables.records;


import model.database.tables.AppUser;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AppUserRecord extends UpdatableRecordImpl<AppUserRecord> implements Record5<String, Long, String, String, String> {

    private static final long serialVersionUID = 335118316;

    /**
     * Setter for <code>public.app_user.type</code>.
     */
    public void setType(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.app_user.type</code>.
     */
    public String getType() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.app_user.key</code>.
     */
    public void setKey(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.app_user.key</code>.
     */
    public Long getKey() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.app_user.id</code>.
     */
    public void setId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.app_user.id</code>.
     */
    public String getId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.app_user.name</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.app_user.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.app_user.password</code>.
     */
    public void setPassword(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.app_user.password</code>.
     */
    public String getPassword() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, Long, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, Long, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return AppUser.APP_USER.TYPE;
    }

    @Override
    public Field<Long> field2() {
        return AppUser.APP_USER.KEY;
    }

    @Override
    public Field<String> field3() {
        return AppUser.APP_USER.ID;
    }

    @Override
    public Field<String> field4() {
        return AppUser.APP_USER.NAME;
    }

    @Override
    public Field<String> field5() {
        return AppUser.APP_USER.PASSWORD;
    }

    @Override
    public String component1() {
        return getType();
    }

    @Override
    public Long component2() {
        return getKey();
    }

    @Override
    public String component3() {
        return getId();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public String component5() {
        return getPassword();
    }

    @Override
    public String value1() {
        return getType();
    }

    @Override
    public Long value2() {
        return getKey();
    }

    @Override
    public String value3() {
        return getId();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public String value5() {
        return getPassword();
    }

    @Override
    public AppUserRecord value1(String value) {
        setType(value);
        return this;
    }

    @Override
    public AppUserRecord value2(Long value) {
        setKey(value);
        return this;
    }

    @Override
    public AppUserRecord value3(String value) {
        setId(value);
        return this;
    }

    @Override
    public AppUserRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public AppUserRecord value5(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public AppUserRecord values(String value1, Long value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AppUserRecord
     */
    public AppUserRecord() {
        super(AppUser.APP_USER);
    }

    /**
     * Create a detached, initialised AppUserRecord
     */
    public AppUserRecord(String type, Long key, String id, String name, String password) {
        super(AppUser.APP_USER);

        set(0, type);
        set(1, key);
        set(2, id);
        set(3, name);
        set(4, password);
    }
}
