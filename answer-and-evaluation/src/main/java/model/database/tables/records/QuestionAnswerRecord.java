/*
 * This file is generated by jOOQ.
 */
package model.database.tables.records;


import model.database.tables.QuestionAnswer;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuestionAnswerRecord extends UpdatableRecordImpl<QuestionAnswerRecord> implements Record5<Long, String, String, Long, Long> {

    private static final long serialVersionUID = -298465062;

    /**
     * Setter for <code>public.question_answer.key</code>.
     */
    public void setKey(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.question_answer.key</code>.
     */
    public Long getKey() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.question_answer.id</code>.
     */
    public void setId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.question_answer.id</code>.
     */
    public String getId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.question_answer.answers</code>.
     */
    public void setAnswers(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.question_answer.answers</code>.
     */
    public String getAnswers() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.question_answer.question</code>.
     */
    public void setQuestion(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.question_answer.question</code>.
     */
    public Long getQuestion() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.question_answer.student</code>.
     */
    public void setStudent(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.question_answer.student</code>.
     */
    public Long getStudent() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, Long, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, String, Long, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return QuestionAnswer.QUESTION_ANSWER.KEY;
    }

    @Override
    public Field<String> field2() {
        return QuestionAnswer.QUESTION_ANSWER.ID;
    }

    @Override
    public Field<String> field3() {
        return QuestionAnswer.QUESTION_ANSWER.ANSWERS;
    }

    @Override
    public Field<Long> field4() {
        return QuestionAnswer.QUESTION_ANSWER.QUESTION;
    }

    @Override
    public Field<Long> field5() {
        return QuestionAnswer.QUESTION_ANSWER.STUDENT;
    }

    @Override
    public Long component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getId();
    }

    @Override
    public String component3() {
        return getAnswers();
    }

    @Override
    public Long component4() {
        return getQuestion();
    }

    @Override
    public Long component5() {
        return getStudent();
    }

    @Override
    public Long value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getId();
    }

    @Override
    public String value3() {
        return getAnswers();
    }

    @Override
    public Long value4() {
        return getQuestion();
    }

    @Override
    public Long value5() {
        return getStudent();
    }

    @Override
    public QuestionAnswerRecord value1(Long value) {
        setKey(value);
        return this;
    }

    @Override
    public QuestionAnswerRecord value2(String value) {
        setId(value);
        return this;
    }

    @Override
    public QuestionAnswerRecord value3(String value) {
        setAnswers(value);
        return this;
    }

    @Override
    public QuestionAnswerRecord value4(Long value) {
        setQuestion(value);
        return this;
    }

    @Override
    public QuestionAnswerRecord value5(Long value) {
        setStudent(value);
        return this;
    }

    @Override
    public QuestionAnswerRecord values(Long value1, String value2, String value3, Long value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QuestionAnswerRecord
     */
    public QuestionAnswerRecord() {
        super(QuestionAnswer.QUESTION_ANSWER);
    }

    /**
     * Create a detached, initialised QuestionAnswerRecord
     */
    public QuestionAnswerRecord(Long key, String id, String answers, Long question, Long student) {
        super(QuestionAnswer.QUESTION_ANSWER);

        set(0, key);
        set(1, id);
        set(2, answers);
        set(3, question);
        set(4, student);
    }
}
