/*
 * This file is generated by jOOQ.
 */
package model.database.tables.records;


import java.time.LocalDate;

import model.database.tables.ExerciseAnswer;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExerciseAnswerRecord extends UpdatableRecordImpl<ExerciseAnswerRecord> implements Record5<Long, String, LocalDate, Long, Long> {

    private static final long serialVersionUID = 765793477;

    /**
     * Setter for <code>public.exercise_answer.key</code>.
     */
    public void setKey(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.exercise_answer.key</code>.
     */
    public Long getKey() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.exercise_answer.id</code>.
     */
    public void setId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.exercise_answer.id</code>.
     */
    public String getId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.exercise_answer.created_at</code>.
     */
    public void setCreatedAt(LocalDate value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.exercise_answer.created_at</code>.
     */
    public LocalDate getCreatedAt() {
        return (LocalDate) get(2);
    }

    /**
     * Setter for <code>public.exercise_answer.content</code>.
     */
    public void setContent(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.exercise_answer.content</code>.
     */
    public Long getContent() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.exercise_answer.student</code>.
     */
    public void setStudent(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.exercise_answer.student</code>.
     */
    public Long getStudent() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, LocalDate, Long, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, LocalDate, Long, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ExerciseAnswer.EXERCISE_ANSWER.KEY;
    }

    @Override
    public Field<String> field2() {
        return ExerciseAnswer.EXERCISE_ANSWER.ID;
    }

    @Override
    public Field<LocalDate> field3() {
        return ExerciseAnswer.EXERCISE_ANSWER.CREATED_AT;
    }

    @Override
    public Field<Long> field4() {
        return ExerciseAnswer.EXERCISE_ANSWER.CONTENT;
    }

    @Override
    public Field<Long> field5() {
        return ExerciseAnswer.EXERCISE_ANSWER.STUDENT;
    }

    @Override
    public Long component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getId();
    }

    @Override
    public LocalDate component3() {
        return getCreatedAt();
    }

    @Override
    public Long component4() {
        return getContent();
    }

    @Override
    public Long component5() {
        return getStudent();
    }

    @Override
    public Long value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getId();
    }

    @Override
    public LocalDate value3() {
        return getCreatedAt();
    }

    @Override
    public Long value4() {
        return getContent();
    }

    @Override
    public Long value5() {
        return getStudent();
    }

    @Override
    public ExerciseAnswerRecord value1(Long value) {
        setKey(value);
        return this;
    }

    @Override
    public ExerciseAnswerRecord value2(String value) {
        setId(value);
        return this;
    }

    @Override
    public ExerciseAnswerRecord value3(LocalDate value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public ExerciseAnswerRecord value4(Long value) {
        setContent(value);
        return this;
    }

    @Override
    public ExerciseAnswerRecord value5(Long value) {
        setStudent(value);
        return this;
    }

    @Override
    public ExerciseAnswerRecord values(Long value1, String value2, LocalDate value3, Long value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExerciseAnswerRecord
     */
    public ExerciseAnswerRecord() {
        super(ExerciseAnswer.EXERCISE_ANSWER);
    }

    /**
     * Create a detached, initialised ExerciseAnswerRecord
     */
    public ExerciseAnswerRecord(Long key, String id, LocalDate createdAt, Long content, Long student) {
        super(ExerciseAnswer.EXERCISE_ANSWER);

        set(0, key);
        set(1, id);
        set(2, createdAt);
        set(3, content);
        set(4, student);
    }
}
