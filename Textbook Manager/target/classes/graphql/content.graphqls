type Textbook {
    id: ID,
    title: String,
    chapters: [Chapter]
}

input TextbookInput {
    title: String
}

type Chapter {
    id: ID,
    title: String,
    content: [ChapterContent]
}

input ChapterInput {
    title: String,
    textbook: ID,
    place: Int
}

interface ChapterContent {
    id: ID
}

type ExerciseContent implements ChapterContent {
    id: ID,
    title: String
    type: ExerciseType,
    questions: [QuestionContent]
}

input ExerciseContentInput {
    title: String,
    type: ExerciseType,
    chapter: ID,
    place: Int
}

enum ExerciseType {
    CHOOSE_A_WORD, FILL_A_WORD, ANSWER_A_QUESTION
}

interface QuestionContent {
    id: ID
}

type ChooseAWord implements QuestionContent{
    id: ID,
    content: [String],
    wordChoice: [[String]]
}

input ChooseAWordInput {
    content: [String],
    wordChoice: [[String]],
    correctAnswers: [[String]],
    exercise: ID,
    place: Int
}

type FillAWord implements QuestionContent {
    id: ID,
    content: [String]
}


input FillAWordInput {
    content: [String],
    correctAnswers: [[String]],
    exercise: ID,
    place: Int
}

